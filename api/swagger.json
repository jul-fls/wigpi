{
    "swagger": "2.0",
    "info": {
      "title": "WIGPI API",
      "version": "1.0.0"
    },
    "schemes": [
      "https"
    ],
    "host": "wigpi.flusin.fr",
    "basePath": "/api",
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "api_key": {
          "type": "apiKey",
          "name": "apiKey",
          "in": "query",
          "description": "API key required to authorize the system requests"
      }
    },
    "paths": {
      "/classes/get_json": {
        "get": {
          "summary": "GET /get_classes",
          "operationId": "ListClasses",
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/JsonListClassesRequest"
              }
            }
          },
          "tags": [
            "Classes"
          ]
        }
      },
      "/courses/get_json/{class_name}": {
        "get": {
          "summary": "GET /get_json/{class_name}",
            "operationId": "ListCoursesForClass",
            "parameters": [
              {
                "name": "class_name",
                "in": "path",
                "required": true,
                "type": "string",
                "format": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "",
                "schema": {
                  "$ref": "#/definitions/JsonListCoursesForClass"
                }
              }
            },
            "tags": [
              "Courses"
            ]
          }
        },
        "/courses/get_png/{class_name}/{randomString}": {
            "get": {
                "summary": "GET /get_png/{class_name}/{randomString}",
                "operationId": "GetPngForClass",
                "parameters": [
                    {
                        "name": "class_name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "randomString",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "description": "A random string to avoid caching"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Courses"
                ]
            }
        },
        "/courses/get_ics/{class_name}": {
            "get": {
                "summary": "GET /courses/get_ics/{class_name}",
                "operationId": "GetIcsForClass",
                "parameters": [
                    {
                        "name": "class_name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ICS File",
                        "content": {
                            "text/calendar": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Courses"
                ]
            }
        },
        "/courses/get_html/{class_name}": {
            "get": {
                "summary": "GET /courses/get_html/{class_name}",
                "operationId": "GetHtmlForClass",
                "parameters": [
                    {
                        "name": "class_name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HTML File",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    {
                        "name": "class_name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/data/courses_data/{class_name}": {
            "get": {
                "summary": "GET /courses_data/{class_name}",
                "operationId": "GetCoursesDataForClass",
                "parameters": [
                    {
                        "name": "class_name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get the courses data with stats for a class",
                        "schema": {
                          "$ref": "#/definitions/GetCoursesDataForClassRequest"
                        }
                      }
                    },
                "tags": [
                    "Courses Data"
                ]
            }
        },
        "/teachers/check_if_email_exists/{email}": {
          "get": {
              "summary": "GET /check_if_email_exists/{email}",
              "operationId": "CheckIfEmailExists",
              "parameters": [
                  {
                      "name": "email",
                      "in": "path",
                      "required": true,
                      "type": "string",
                      "format": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "True if the email exists, false otherwise",
                      "schema": {
                        "$ref": "#/definitions/JsonCheckIfEmailExistsRequest"
                      }
                    }
                  },
              "tags": [
                  "Misc"
              ]
          }
      },
      "/system/refresh_edt": {
        "get": {
          "summary": "GET /system/refresh_edt",
          "operationId": "RefreshEDT",
          "parameters": [
            {
              "name": "apiKey",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "string",
              "description": "API key to authenticate the request (optional in swagger web ui because it's injected with the authorize button at the top of the page)"
            }
          ],
          "responses": {
            "200": {
              "description": "EDT refresh triggered successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "EDT refresh triggered successfully"
                  }
                }
              }
            },
            "403": {
              "description": "Invalid or inactive API key",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Invalid or inactive API key"
                  }
                }
              }
            },
            "409": {
              "description": "EDT refresh already in progress",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "EDT refresh already in progress"
                  }
                }
              }
            },
            "500": {
              "description": "Failed to log request",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Failed to log request"
                  }
                }
              }
            }
          },
          "tags": [
            "System"
          ],
          "security": [
            {
              "api_key": []
            }
          ]
        }
      },
      "/system/post_discord_edt": {
        "get": {
          "summary": "Trigger posting EDT to Discord",
          "description": "This route triggers the process of posting the course schedule (EDT) to Discord for all classes. It requires a valid API key.",
          "operationId": "PostDiscordEDT",
          "parameters": [
            {
              "name": "apiKey",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "API key to authenticate the request (optional in swagger web ui because it's injected with the authorize button at the top of the page)"
            }
          ],
          "responses": {
            "200": {
              "description": "EDT post triggered successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Post EDT triggered successfully"
                  }
                }
              }
            },
            "403": {
              "description": "Invalid or inactive API key",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Invalid or inactive API key"
                  }
                }
              }
            },
            "409": {
              "description": "Post EDT already in progress",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Post EDT already in progress"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Error during EDT post"
                  }
                }
              }
            }
          },
          "tags": [
            "System"
          ],
          "security": [
            {
              "api_key": []
            }
          ]
        }
      },
      "/system/check_locks": {
        "get": {
          "summary": "Check and Unlock Expired Lock Files",
          "description": "Checks for any lock files in the active state ('1') for more than 30 minutes, logs the action, and unlocks them if found. Requires a valid API key.",
          "operationId": "CheckLocks",
          "parameters": [
              {
                  "name": "apiKey",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "API key to authenticate the request (optional in swagger web ui because it's injected with the authorize button at the top of the page)"
              }
          ],
          "responses": {
              "200": {
                  "description": "Lock files checked successfully",
                  "schema": {
                      "type": "object",
                      "properties": {
                          "message": {
                              "type": "string",
                              "example": "Locks checked successfully"
                          },
                          "unlockedLocks": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              },
                              "example": ["file1.lock", "file2.lock"]
                          }
                      }
                  }
              },
              "403": {
                  "description": "Invalid or inactive API key",
                  "schema": {
                      "type": "object",
                      "properties": {
                          "error": {
                              "type": "string",
                              "example": "Invalid or inactive API key"
                          }
                      }
                  }
              },
              "500": {
                  "description": "Internal server error",
                  "schema": {
                      "type": "object",
                      "properties": {
                          "error": {
                              "type": "string",
                              "example": "Error reading lock files directory"
                          }
                      }
                  }
              }
          },
          "tags": [
              "System"
          ],
          "security": [
            {
              "api_key": []
            }
          ]
        }
    }
  },
  "definitions": {
    "JsonClass": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        },
        "displayname": {
          "type": "string",
          "format": "string"
        }
      },
      "description": "Represents a class"
    },
    "JsonListClassesRequest": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonClass"
          }
        }
      },
      "description": "Represents a list of classes"
    },
    "GetCoursesDataForClassRequest": {
      "type": "array",
          "items": {
            "$ref": "#/definitions/GetCoursesDataForClassObject"
          }
    },
    "GetCoursesDataForClassObject": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "format": "string"
        },
        "firstDate": {
          "type": "string",
          "format": "string"
        },
        "lastDate": {
          "type": "string",
          "format": "string"
        },
        "sessions":{
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int64"
            },
            "realized": {
              "type": "integer",
              "format": "int64"
            },
            "planned": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "hours": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int64"
            },
            "realized": {
              "type": "integer",
              "format": "int64"
            },
            "planned": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "percentageOfCompletion": {
          "type": "integer",
          "format": "int64"
        },
        "ongoing": {
          "type": "boolean"
        },
        "hasVisio": {
          "type": "boolean"
        },
        "percentageOfVisio": {
          "type": "integer",
          "format": "int64"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Teacher"
          }
        }
      },
      "description": "Represents a list of classes"
    },
    "JsonCheckIfEmailExistsRequest": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        }
      },
      "description": "Represents a check if email exists"
    },
    "JsonListCoursesForClass": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/JsonCoursesFileInfo"
        }
      },
      "description": "Represents a list of courses for a class"
    },
    "JsonCoursesFileInfo": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "unix_timestamp"
        },
        "classname: ": {
          "type": "string",
          "format": "string"
        },
        "description": {
          "type": "string",
          "format": "string"
        },
        "courses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonCourseInfo"
          }
        }
      },
      "description": "Represents a list of courses"
    },
    "Teacher": {
      "type": "object",
      "properties": {
          "name": {
              "type": "string",
              "format": "string"
          },
          "email": {
              "type": "string",
              "format": "string"
          }
      },
      "description": "Represents a teacher"
    },
    "JsonCourseInfo": {
      "type": "object",
      "properties": {
        "dtstart": {
          "type": "string",
          "format": "string"
        },
          "dtend": {
              "type": "string",
              "format": "string"
          },
          "matiere": {
              "type": "string",
              "format": "string"
          },
          "prof": {
            "$ref": "#/definitions/Teacher"
          },
          "salle": {
              "type": "string",
              "format": "string"
          },
          "batiment": {
              "type": "string",
              "format": "string"
          },
          "visio": {
              "type": "boolean"
          },
          "teamslink": {
              "type": "string",
              "format": "string"
          }
      },
      "description": "Represents a course"
    }
  }
}